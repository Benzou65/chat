// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client';

type Simplify<T> = {
  [KeyType in keyof T]: T[KeyType];
};
/** Content for Auth documents */
interface AuthDocumentData {
  /**
   * Authorized users field in *Auth*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: auth.authorized_users[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/group
   *
   */
  authorized_users: prismic.GroupField<Simplify<AuthDocumentDataAuthorizedUsersItem>>;
}
/**
 * Item in Auth → Authorized users
 *
 */
export interface AuthDocumentDataAuthorizedUsersItem {
  /**
   * email field in *Auth → Authorized users*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: auth.authorized_users[].email
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  email: prismic.KeyTextField;
}
/**
 * Auth document from Prismic
 *
 * - **API ID**: `auth`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AuthDocument<Lang extends string = string> = prismic.PrismicDocumentWithoutUID<
  Simplify<AuthDocumentData>,
  'auth',
  Lang
>;
export type AllDocumentTypes = AuthDocument;
declare module '@prismicio/client' {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }
  namespace Content {
    export type {
      AuthDocumentData,
      AuthDocumentDataAuthorizedUsersItem,
      AuthDocument,
      AllDocumentTypes,
    };
  }
}
